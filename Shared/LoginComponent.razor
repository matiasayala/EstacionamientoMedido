@inject NavigationManager NavigationManager
@inject AuthService authService
@inject ILoginService loginService

<div class="bg-white shadow-soft border rounded border-light p-4 p-lg-5 w-100">
    <div class="text-center text-md-center mb-4 mt-md-0">
        <h1 class="mb-0 h3">Sistema de Estacionamiento Medidio</h1>
    </div>
    <EditForm @ref="LoginEditForm" Model="@userLogin" OnSubmit="@ValidateLogin" class="mt-4">
        <div class="form-group mb-4">
            <label for="email">Nombre de usuario</label>
            <div class="input-group">
                <span class="input-group-text" id="basic-addon1"><span class="fas fa-envelope"></span></span>
                <input id="username" @bind="userLogin.Username" class="form-control" type="text" placeholder="Nombre de usuario" autofocus required>
            </div>
        </div>
        <div class="form-group">
            <label for="email">Nombre de usuario</label>
            <div class="input-group mb-4">
                <span class="input-group-text" id="basic-addon1"><span class="fas fa-lock"></span></span>
                <input id="password" @bind="userLogin.Password" class="form-control" type="password" placeholder="Contraseña" required>
            </div>

            <div class="d-flex justify-content-between align-items-top mb-4">
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" value="" id="remember">
                    <label class="form-check-label mb-0" for="remember">
                        Recuerdame
                    </label>
                </div>
                <div><a href="forgot-password" class="small text-right">Olvidaste tu contraseña?</a></div>
            </div>
        </div>
        <button type="submit" OnClick="(() => LoginEditForm.OnSubmit.InvokeAsync())" class="btn btn-primary btn-block">Ingresar</button>
        <div class="py-3 ">
            <a href="PreLogin" class="btn-xs text-gray-700"><i class="fas fa-angle-left mr-2"></i> Volver al login</a>
        </div>
    </EditForm>
</div>

@code {
    [CascadingParameter] DigipModalInstance DigipModalInstance { get; set; }

    private UserLogin userLogin = new UserLogin();
    private EditForm LoginEditForm;

    private async Task ValidateLogin()
    {
        var username = authService.Validate(userLogin.Username, userLogin.Password);
        if (username == null)
        {
            await JsRuntime.InvokeAsync<string>("alert", $"Usuario o Contraseña erroneos");
        }
        else
        {
            await loginService.Login(username);
            DigipModalInstance.Ok();
        }
    }

    @using System.ComponentModel.DataAnnotations;
    public class UserLogin
    {
        [Required(ErrorMessage = "Campo requerido")]
        public string Username { get; set; }
        [Required(ErrorMessage = "Campo requerido")]
        public string Password { get; set; }
    }
}
